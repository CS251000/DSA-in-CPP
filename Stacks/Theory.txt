Stack is a LIFO (Last In First Out) data structure.
Lower portion of stack is locked and upper portion is called top.
An element is added/pushed and removed/popped at/from the top of the stack only.
Use case of stack: Recursion Call Stack

Functions for stack:
(1) push(): insert element at top --> void push(x)
(2) pop(): remove element from top --> void pop()
(3) isEmpty(): check if stack is empty or not --> bool isEmpty()
(4) isFull(): check if stack is full or not --> bool isFull()
(5) size(): check size of stack --> int size()
(6) top(): check topmost element --> int top()

--> Best implementation in O(1)

Two conditions in stacks:
(1) Overflow: when capacity defined for stack exceeds by adding more elements
(2) Underflow: when you access/remove element from stack which is empty
